@using Microsoft.AspNetCore.Identity
@using biletcoo.Models
@model IEnumerable<biletcoo.Models.Event>
@inject SignInManager<users> SignInManager
@inject UserManager<users> userManager
@{
    ViewData["Title"] = "Admin";
    Layout = null;
    var user = await userManager.GetUserAsync(User);
    var name = user.FirstName;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>  @ViewData["Title"]-Biletco</title>
    <link rel="stylesheet" href="~/css/AdminPage.css" asp-append-version="true" />
    <link rel="stylesheet"
          href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css"
          integrity="sha512-Kc323vGBEqzTmouAECnVceyQqyqdsSiqLQISBL29aUW4U/M7pSPA/gEUZQqv1cwx4OnYxTxve5UMg5GT6L4JJg=="
          crossorigin="anonymous"
          referrerpolicy="no-referrer" />
</head>
<body>
    <header>
        <a asp-controller="Admin" asp-action="Index"><h1>Biletco</h1></a>
        <div class="search-container">
            <input type="text" id="search" placeholder="Search by event name" onkeyup="searchEvent()">
            <i class="fa-solid fa-magnifying-glass"></i>
        </div>
        <div class="right-header">
            <ul>
                <li><p style="color: white; text-align: center;"><strong>Welcome @name </strong></p></li>
                <li>
                    <a asp-controller="Admin" asp-action="AdminFullEvents" id="header-button">View Full Events</a>
                </li>
                <li><a asp-controller="Home" asp-action="Index" id="logout">Log Out</a></li>

            </ul>
        </div>
    </header>
    <div class="category">
        <ul>
            <div class="wrap">
                <i class="fa-solid fa-eye"></i>
            <li>
                <select id="category" name="category" onchange="filterByCategoryAndCity()">
                    <option value="">Select a category</option>
                    <option value="Music">Music</option>
                    <option value="Art">Art</option>
                    <option value="Sports">Sports</option>
                    <option value="Workshop">Workshop</option>
                </select>
            </li>
    </div>
    <div class="wrap">
        <i class="fa-solid fa-location-dot"></i>
        <li>
            <select id="city_sb" name="city_sb" class="discoverbar__select" onchange="filterByCategoryAndCity()">
                <option selected="selected" value="-1">Select a place</option>
                        @if (ViewData["Locations"] != null)
                        {
                            foreach (var location in (List<string>)ViewData["Locations"])
                            {
                        <option value="@location">@location</option>
                            }
                        }
            </select>


        </li>
    </div>
    </ul>
    </div>
    <main>
        <h1 style="font-size:1.5rem; border-bottom:3px solid black; width:"> Pending List</h1>

        @{
            if (Model.Any())
            {// tempdata ?? is used to create an initial value for it.

                bool hasPendingEvents = Model.Any(e => e.Status == "Pending");
                if (hasPendingEvents)
                {

                    foreach (var Event in Model)
                    {
                        if (Event.Status == "Pending")
                        {
                            <div class="event-container" data-event-name="@Event.Name.ToLower()" data-event-city="@Event.Location"
                                 data-event-category="@Event.category">
                            <div class="img">
                                <img src="~/img/konser.jpg" alt="Concert" />
                            </div>
                            <div class="event-details">
                                <h2>@Event.Name</h2>
                                <div class="desc">
                                    <p>@Event.Description</p>
                                </div>
                                <div class="btn-div">
                                    <a id="header-button" asp-controller="Admin" asp-action="ManageEventAdmin" asp-route-eventId="@Event.Id">Event Details</a>
                                </div>
                            </div>
                       
                        </div>
                        }
                    }
                }else{
                    <div class="event-container" style="display:block;">
                        <p style="color:red;padding:5px;font-size:1.2rem; font-weight:bold; text-align:center;">No pending event left!</p>
                    </div>
                }
            }
            else
            {

                <div class="event-container" style="display:block ">
                    <p style="color:red;padding:5px;font-size:1.2rem; font-weight:bold; text-align:center ">No event created yet!</p>
                </div>
            }

        }

    </main>

    <script>
        function searchEvent() {

            const searchTerm = document.getElementById("search").value.toLowerCase();


            const eventContainers = document.querySelectorAll(".event-container");


            eventContainers.forEach(container => {

                const eventName = container.getAttribute("data-event-name");


                if (eventName.includes(searchTerm)) {

                    container.style.display = "";
                } else {

                    container.style.display = "none";
                }
            });
        }
    </script>

    <script>
        function filterByCategoryAndCity() {
            const categorySelect = document.getElementById("category");
            const selectedCategory = categorySelect.value;  
            const citySelect = document.getElementById("city_sb");
            const selectedCity = citySelect.value;  

            const eventContainers = document.querySelectorAll(".event-container");

            eventContainers.forEach(container => {
                const eventCity = container.getAttribute("data-event-city") || "";
                const eventCategory = container.getAttribute("data-event-category") || "";


                let cityMatches = true;
                if (selectedCity !== "-1") {
                    cityMatches = (eventCity === selectedCity);
                }

                let categoryMatches = true;
                if (selectedCategory !== "") {
                    categoryMatches = (eventCategory === selectedCategory);
                }

                if (cityMatches && categoryMatches) {
                    container.style.display = "";
                } else {
                    container.style.display = "none";
                }
            });
        }
    </script>
    <script>
        document.addEventListener("DOMContentLoaded", function() {
            var descElements = document.querySelectorAll('.desc p');

            descElements.forEach(function(el) {
                var text = el.innerText;
                var maxHeight = parseInt(window.getComputedStyle(el).maxHeight);
                while (el.scrollHeight > maxHeight) {
                    text = text.substring(0, text.length - 1);
                    el.innerText = text + "...";
                }
            });
        });
    </script>

</body>
</html>
